#!/usr/bin/env python3
"""
Script de demostraci√≥n del Agente de An√°lisis de Prote√≠nas
"""
import sys
import os
import pandas as pd

# A√±adir el directorio src al path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def demo_features():
    """Demuestra las caracter√≠sticas principales de la aplicaci√≥n"""
    print("üî¨ DEMOSTRACI√ìN: Agente de An√°lisis de Prote√≠nas")
    print("=" * 60)
    
    # 1. Configuraci√≥n
    print("\n1Ô∏è‚É£ CONFIGURACI√ìN")
    print("-" * 20)
    try:
        from config import APP_CONFIG, MESSAGES, REQUIRED_COLUMNS
        print(f"‚úÖ T√≠tulo: {APP_CONFIG['page_title']}")
        print(f"‚úÖ Columnas requeridas: {', '.join(REQUIRED_COLUMNS)}")
        print(f"‚úÖ Mensajes configurados: {len(MESSAGES)}")
    except Exception as e:
        print(f"‚ùå Error en configuraci√≥n: {e}")
    
    # 2. Utilidades
    print("\n2Ô∏è‚É£ UTILIDADES DE VALIDACI√ìN")
    print("-" * 30)
    try:
        from utils import validate_protein_sequence, calculate_molecular_weight
        
        # Probar validaci√≥n de secuencia
        test_seq = "ACDEFGHIKLMNPQRSTVWY"
        validation = validate_protein_sequence(test_seq)
        print(f"‚úÖ Secuencia v√°lida: {validation['is_valid']}")
        print(f"‚úÖ Longitud: {validation['length']} amino√°cidos")
        
        # Probar c√°lculo de peso molecular
        weight = calculate_molecular_weight(test_seq)
        print(f"‚úÖ Peso molecular: {weight:.2f} Da")
        
    except Exception as e:
        print(f"‚ùå Error en utilidades: {e}")
    
    # 3. Analytics
    print("\n3Ô∏è‚É£ SISTEMA DE ANALYTICS")
    print("-" * 25)
    try:
        from analytics import analytics_tracker, get_dataset_insights
        
        # Simular evento
        analytics_tracker.track_event("demo_test", {"feature": "validation"})
        print("‚úÖ Evento de analytics registrado")
        
        # Crear dataset de ejemplo
        sample_data = {
            'seq': ['ACDEFG', 'HIKLMN', 'PQRSTV'],
            'sst3': ['HHHEEE', 'CCCHHE', 'EEECCC'],
            'sst8': ['HHHEEE', 'CCCHHE', 'EEECCC'],
            'len': [6, 6, 6],
            'has_nonstd_aa': [False, False, True]
        }
        df_sample = pd.DataFrame(sample_data)
        
        insights = get_dataset_insights(df_sample)
        print(f"‚úÖ Insights generados: {len(insights)} categor√≠as")
        
    except Exception as e:
        print(f"‚ùå Error en analytics: {e}")
    
    # 4. Logging
    print("\n4Ô∏è‚É£ SISTEMA DE LOGGING")
    print("-" * 22)
    try:
        from logger import app_logger, log_user_interaction
        
        app_logger.info("Demo del sistema de logging")
        log_user_interaction("demo_test", {"timestamp": "now"})
        print("‚úÖ Sistema de logging funcionando")
        
    except Exception as e:
        print(f"‚ùå Error en logging: {e}")
    
    # 5. EDA
    print("\n5Ô∏è‚É£ AN√ÅLISIS EXPLORATORIO")
    print("-" * 25)
    try:
        from eda import validate_eda
        
        # Usar el mismo dataset de ejemplo
        is_valid = validate_eda(df_sample)
        print(f"‚úÖ Dataset v√°lido para EDA: {is_valid}")
        
    except Exception as e:
        print(f"‚ùå Error en EDA: {e}")
    
    # 6. Agente (sin API key)
    print("\n6Ô∏è‚É£ AGENTE DE IA")
    print("-" * 15)
    try:
        from agent import ProteinAnalysisAgent
        print("‚ö†Ô∏è  Agente disponible (requiere API key para funcionar)")
        
    except Exception as e:
        print(f"‚ùå Error en agente: {e}")
    
    print("\n" + "=" * 60)
    print("üéâ DEMOSTRACI√ìN COMPLETADA")
    print("\nüìã RESUMEN DE CARACTER√çSTICAS:")
    print("   ‚úÖ Configuraci√≥n modular")
    print("   ‚úÖ Validaci√≥n de secuencias de prote√≠nas")
    print("   ‚úÖ C√°lculo de peso molecular")
    print("   ‚úÖ Sistema de analytics y m√©tricas")
    print("   ‚úÖ Logging estructurado")
    print("   ‚úÖ An√°lisis exploratorio de datos")
    print("   ‚úÖ Interfaz web con Streamlit")
    print("   ‚ö†Ô∏è  Agente de IA (requiere configuraci√≥n)")
    
    print("\nüöÄ PARA USAR LA APLICACI√ìN:")
    print("   1. Configura tu API key en .env")
    print("   2. Ejecuta: streamlit run src/app.py")
    print("   3. Abre http://localhost:8501 en tu navegador")

if __name__ == "__main__":
    demo_features()