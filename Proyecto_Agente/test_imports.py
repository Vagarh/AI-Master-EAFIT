#!/usr/bin/env python3
"""
Script de prueba para verificar que todos los imports funcionan correctamente
"""
import sys
import os

# A√±adir el directorio src al path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def test_imports():
    """Prueba todos los imports principales"""
    try:
        print("üîÑ Probando imports...")
        
        # Imports b√°sicos
        import streamlit as st
        print("‚úÖ Streamlit importado correctamente")
        
        import pandas as pd
        print("‚úÖ Pandas importado correctamente")
        
        # Imports de nuestros m√≥dulos
        from config import APP_CONFIG, MESSAGES
        print("‚úÖ Config importado correctamente")
        
        from logger import app_logger
        print("‚úÖ Logger importado correctamente")
        
        from analytics import analytics_tracker
        print("‚úÖ Analytics importado correctamente")
        
        from utils import validate_protein_sequence
        print("‚úÖ Utils importado correctamente")
        
        # Probar una funci√≥n
        result = validate_protein_sequence("ACDEFGHIKLMNPQRSTVWY")
        print(f"‚úÖ Validaci√≥n de secuencia funciona: {result['is_valid']}")
        
        # Imports que pueden fallar por dependencias externas
        try:
            from agent import ProteinAnalysisAgent
            print("‚úÖ Agent importado correctamente")
        except Exception as e:
            print(f"‚ö†Ô∏è  Agent import con advertencia: {e}")
        
        try:
            from eda import validate_eda
            print("‚úÖ EDA importado correctamente")
        except Exception as e:
            print(f"‚ö†Ô∏è  EDA import con advertencia: {e}")
        
        print("\nüéâ ¬°Todos los imports principales funcionan!")
        return True
        
    except Exception as e:
        print(f"‚ùå Error en imports: {e}")
        return False

def test_config():
    """Prueba la configuraci√≥n"""
    try:
        from config import APP_CONFIG, MESSAGES, REQUIRED_COLUMNS
        
        print("\nüîß Probando configuraci√≥n...")
        print(f"‚úÖ T√≠tulo de la app: {APP_CONFIG['page_title']}")
        print(f"‚úÖ Columnas requeridas: {len(REQUIRED_COLUMNS)} columnas")
        print(f"‚úÖ Mensajes configurados: {len(MESSAGES)} mensajes")
        
        return True
    except Exception as e:
        print(f"‚ùå Error en configuraci√≥n: {e}")
        return False

def main():
    """Funci√≥n principal de prueba"""
    print("üß™ Ejecutando pruebas del Agente de An√°lisis de Prote√≠nas")
    print("=" * 60)
    
    success = True
    
    # Probar imports
    if not test_imports():
        success = False
    
    # Probar configuraci√≥n
    if not test_config():
        success = False
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ ¬°Todas las pruebas pasaron! La aplicaci√≥n est√° lista.")
    else:
        print("‚ùå Algunas pruebas fallaron. Revisa los errores arriba.")
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)